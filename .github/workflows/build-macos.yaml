name: Build macOS (arm64/x86_64)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build-universal:
    runs-on: macos-14  # Apple Silicon runner；可同时产出 x86_64 与 arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'  # Required for objectVersion 77 project format

      - name: Build Universal (arm64 + x86_64)
        run: |
          set -euxo pipefail
          xcodebuild -version
          xcodebuild -list -project LaunchManager.xcodeproj
          xcodebuild \
            -project LaunchManager.xcodeproj \
            -scheme LaunchManager \
            -configuration Release \
            -derivedDataPath build \
            -destination 'platform=macOS,arch=x86_64' \
            -destination 'platform=macOS,arch=arm64' \
            ONLY_ACTIVE_ARCH=NO CODE_SIGNING_ALLOWED=NO \
            build

      - name: Verify architectures
        run: |
          APP="build/Build/Products/Release/LaunchManager.app/Contents/MacOS/LaunchManager"
          file "$APP"
          lipo -info "$APP"  # 期待包含: Architectures in the fat file: x86_64 arm64

      - name: Package Universal .app
        run: |
          APP_PATH="build/Build/Products/Release/LaunchManager.app"
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" LaunchManager-macos-Universal.zip

      - name: Also export single-arch variants (optional)
        run: |
          BIN="build/Build/Products/Release/LaunchManager.app/Contents/MacOS/LaunchManager"
          # 拆分出单架构可执行文件
          lipo "$BIN" -thin x86_64 -output LaunchManager.x86_64
          lipo "$BIN" -thin arm64   -output LaunchManager.arm64
          # 生成两个单架构 .app 副本（仅替换可执行文件）
          APPDIR="build/Build/Products/Release/LaunchManager.app"
          cp -R "$APPDIR" LaunchManager.x86_64.app
          cp -R "$APPDIR" LaunchManager.arm64.app
          install -m 755 LaunchManager.x86_64 LaunchManager.x86_64.app/Contents/MacOS/LaunchManager
          install -m 755 LaunchManager.arm64   LaunchManager.arm64.app/Contents/MacOS/LaunchManager
          ditto -c -k --sequesterRsrc --keepParent LaunchManager.x86_64.app LaunchManager-macos-Intel.zip
          ditto -c -k --sequesterRsrc --keepParent LaunchManager.arm64.app   LaunchManager-macos-AppleSilicon.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: LaunchManager-macos-builds
          path: |
            LaunchManager-macos-Universal.zip
            LaunchManager-macos-Intel.zip
            LaunchManager-macos-AppleSilicon.zip
          if-no-files-found: error